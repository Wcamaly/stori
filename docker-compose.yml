version: "3"
services:
  proxy: 
    image: nginx:latest
    container_name: reverse_proxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:80"
      - "443:443"
    networks:
      - stori-internal
      - stori-external

  postgres:
    image: postgres:latest
    container_name: postgres
    deploy:
      endpoint_mode: dnsrr
    networks:
      stori-internal:
        aliases:
          - dbpostgres
      stori-external:
        aliases:
          - dbpostgres
  
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: rootPassword
      POSTGRES_USER: root

  localstack:
    container_name: localstack_stori_solution
    image: localstack/localstack-pro:latest
    ports:
      - "4566:4566" 
      - "4571:4571" 
      - "8055:8080"
    environment:
     
      - LOCALSTACK_AUTH_TOKEN="ls-wEVULasU-baRO-qiFa-1967-poQIGAZe441e"
      - DEFAULT_REGION=us-east-1
      - LAMBDA_REMOVE_CONTAINERS=true
      - DEBUG=1 
      - PERSISTENCE=1
      - LAMBDA_DOCKER_NETWORK=stori_stori-internal

    volumes:
      - "./localstack:/tmp" 
      - "/var/run/docker.sock:/var/run/docker.sock" 
    networks:
      stori-internal:
        aliases:
          - localstack
      stori-external: 
        aliases:
          - localstack
  
  transaction-service:
    stdin_open: true
    restart: always
    build:
      context: ./backends/transaction-service
      dockerfile: Dockerfile

    container_name: transaction-service
   
    environment:
      - DB_USER=root
      - DB_PASSWORD=rootPassword
      - DB_HOST=dbpostgres
      - DB_NAME=stori_service
      - DB_PORT=5432
    depends_on:
      - postgres
      - proxy
    networks:
      stori-internal:
        aliases:
          - transaction-service
  
  user-service:
    stdin_open: true
    restart: always
    build:
      context: ./backends/user-service
      dockerfile: Dockerfile

    container_name: user-service
  
    environment:
      - DB_USER=root
      - DB_PASSWORD=rootPassword
      - DB_HOST=dbpostgres
      - DB_NAME=stori_service
      - DB_PORT=5432
    depends_on:
      - postgres
      - proxy
    networks:
      stori-internal:
        aliases:
          - user-service

volumes:
  postgres-data:
  pgadmin-data:

networks:
  stori-internal: {}
  stori-external: 
    external: true
  